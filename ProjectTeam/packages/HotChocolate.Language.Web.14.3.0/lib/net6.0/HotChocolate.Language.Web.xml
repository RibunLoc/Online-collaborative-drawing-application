<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HotChocolate.Language.Web</name>
    </assembly>
    <members>
        <member name="T:HotChocolate.Language.CachedDocument">
            <summary>
            Represents a cached document.
            </summary>
            <param name="body"></param>
            <param name="isPersisted"></param>
        </member>
        <member name="M:HotChocolate.Language.CachedDocument.#ctor(HotChocolate.Language.DocumentNode,System.Boolean)">
            <summary>
            Represents a cached document.
            </summary>
            <param name="body"></param>
            <param name="isPersisted"></param>
        </member>
        <member name="P:HotChocolate.Language.CachedDocument.Body">
            <summary>
            Gets the actual GraphQL syntax tree.
            </summary>
        </member>
        <member name="P:HotChocolate.Language.CachedDocument.IsPersisted">
            <summary>
            Defines if the document is a persisted document.
            </summary>
        </member>
        <member name="T:HotChocolate.Language.GraphQLRequest">
            <summary>
            Represents the parsed GraphQL request JSON object.
            </summary>
        </member>
        <member name="T:HotChocolate.Language.IDocumentCache">
            <summary>
            The document cache is ues to cache parsed syntax trees.
            </summary>
        </member>
        <member name="P:HotChocolate.Language.IDocumentCache.Capacity">
            <summary>
            Gets maximum amount of GraphQL syntax trees that can be cached. The default
            value is <c>100</c>. The minimum allowed value is <c>10</c>.
            </summary>
        </member>
        <member name="P:HotChocolate.Language.IDocumentCache.Count">
            <summary>
            Gets the amount of compiled queries residing in the cache.
            </summary>
        </member>
        <member name="M:HotChocolate.Language.IDocumentCache.TryGetDocument(System.String,HotChocolate.Language.CachedDocument@)">
            <summary>
            Tries to get a cached GraphQL syntax tree by its internal <paramref name="documentId"/>.
            </summary>
            <param name="documentId">
            The internal document id.
            </param>
            <param name="document">
            The GraphQL syntax tree.
            </param>
            <returns>
            <c>true</c> if a cached GraphQL syntax tree was found that matches the
            <paramref name="documentId"/>, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:HotChocolate.Language.IDocumentCache.TryAddDocument(System.String,HotChocolate.Language.CachedDocument)">
            <summary>
            Tries to add a parsed GraphQL syntax tree to the cache.
            </summary>
            <param name="documentId">
            The internal document id.
            </param>
            <param name="document">
            The GraphQL syntax tree.
            </param>
        </member>
        <member name="M:HotChocolate.Language.IDocumentCache.Clear">
            <summary>
            Clears the cache.
            </summary>
        </member>
    </members>
</doc>
